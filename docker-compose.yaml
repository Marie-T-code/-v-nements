services:
  php:
    image: php-evenementiel-nevers:v1
    container_name: backend_evenementiel_nevers
    ports:
      - '8084:80' # on définit le port pour accéder à l'application (localhost:8000) - incrémenter si le port est déjà utilisé par un autre projet
    volumes:
      - ./backend:/var/www/html # on monte le dossier courant dans le dossier /var/www/html du container
      - ./data:/var/www/html/data
    build:
      context: .
      dockerfile: Dockerfile

  db:
    image: postgis/postgis:15-3.3
    container_name: evenementiel_nevers_db
    environment:
      POSTGRES_PASSWORD: test
      POSTGRES_USER: test
      POSTGRES_DB: evenementiel_nevers_db
      # Variables pour résoudre les problèmes d'initialisation
      PGUSER: test
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - evenementiel_data:/var/lib/postgresql/data
      - ./DB_DATA:/docker-entrypoint-initdb.d # création de la table et insertion des données à partir du fichier users_postgres.sql
    ports:
      - '5434:5432' #  incrémenter si le port est déjà utilisé par un autre projet
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
      # Simplification de la configuration - pas de fichiers externes
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    ports:
      - '8085:80' # on définit le port pour accéder à pgadmin (localhost:8082) - incrémenter si le port est déjà utilisé par un autre projet
    # volumes:
    #   - ./data/servers.json:/pgadmin4/servers.json
    depends_on:
      - db
volumes:
  evenementiel_data:
